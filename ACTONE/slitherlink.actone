SORT cell
OPS
	empty: -> cell
	number: nat -> cell

SORT cellList
OPS
	new-cl: cell cell cell cell cell cell -> cellList
	get-cell: cellList nat nat -> cell
FORALL c: cell
AXIOMS
	(1) get-cell(new-cl(c, _, _, _, _, _), 0, 0) -> c
	(2) get-cell(new-cl(_, c, _, _, _, _), 1, 0) -> c
	(3) get-cell(new-cl(_, _, c, _, _, _), 2, 0) -> c
	(4) get-cell(new-cl(_, _, _, c, _, _), 0, 1) -> c
	(5) get-cell(new-cl(_, _, _, _, c, _), 1, 1) -> c
	(6) get-cell(new-cl(_, _, _, _, _, c), 2, 1) -> c

SORT segment
OPS
	enabled: -> segment
	disabled -> segment
	unknown -> segment
	is-set?: segment -> bool
AXIOMS
	(1) is-set?(enabled) = True
	(2) is-set?(disabled) = False
	(3) is-set?(unknown) = False

-- horizontal and vertical lines
SORT hLine
OPS
	new-hl: segment segment segment -> hLine
	get-hseg: hLine nat -> segment
FORALL s: segment
AXIOMS
	(1) get-hseg(new-hl(s, _, _), 0) -> s
	(2) get-hseg(new-hl(_, s, _), 1) -> s
	(3) get-hseg(new-hl(_, _, s), 2) -> s

SORT hLineList
OPS
	new-hll: hLine hLine hLine -> hLineList
	get-hline: hLineList nat -> hLine
FORALL h: hLine
AXIOMS
	(1) get-hline(new-hll(h, _, _), 0) -> h
	(2) get-hline(new-hll(_, h, _), 1) -> h
	(3) get-hline(new-hll(_, _, h), 2) -> h

SORT vLine
OPS
	new-vl: segment segment -> vLine
	get-vseg: hLine nat -> segment
FORALL s: segment
AXIOMS
	(1) get-vseg(new-vl(s, _), 0) -> s
	(2) get-vseg(new-vl(_, s), 1) -> s

SORT vLineList
OPS
	new-vl: vLine vLine vLine vLine -> vLineList
	get-vline: vLineList nat -> vLine
FORALL v: vLine
AXIOMS
	(1) get-vline(new-vl(v, _, _, _), 0) -> v
	(2) get-vline(new-vl(_, v, _, _), 1) -> v
	(3) get-vline(new-vl(_, _, v, _), 2) -> v
	(4) get-vline(new-vl(_, _, _, v), 3) -> v

-- board type
SORT board
OPS
	createBoard: cellList hLineList vLineList -> board
	get-cl: board -> cellList
	get-hll: board -> hLineList
	get-vll: board -> vLineList

	get-top: nat nat -> segment
	get-right: nat nat -> segment
	get-bottom: nat nat -> segment
	get-left: nat nat -> segment
FORALL cb: createBoard
AXIOMS
	(1) get-cl -> createBoard(cl, _, _) -> cl
	(2) get-hll -> createBoard(_, hll, _) -> hll
	(3) get-vll -> createBoard(_, _, vll) -> vll

	(4) get-top(0, 0) -> get-hseg(get-hline(get-hll(cb), 0), 0)
	(5) get-top(0, 1) -> get-hseg(get-hline(get-hll(cb), 1), 0)
	(6) get-top(1, 0) -> get-hseg(get-hline(get-hll(cb), 0), 1)
	(7) get-top(1, 1) -> get-hseg(get-hline(get-hll(cb), 1), 1)
	(8) get-top(2, 0) -> get-hseg(get-hline(get-hll(cb), 0), 2)
	(9) get-top(2, 1) -> get-hseg(get-hline(get-hll(cb), 1), 2)

	(10) get-bottom(0, 0) -> get-top(0, 1)
	(11) get-bottom(1, 0) -> get-top(1, 1)
	(12) get-bottom(2, 0) -> get-top(2, 1)
	(13) get-bottom(0, 2) -> get-hseg(get-hline(get-hll(cb), 2), 0)
	(14) get-bottom(1, 2) -> get-hseg(get-hline(get-hll(cb), 2), 1)
	(15) get-bottom(2, 2) -> get-hseg(get-hline(get-hll(cb), 2), 2)

	(16) get-left(0, 0) -> get-vseg(get-vline(get-vll(cb), 0), 0)
	(17) get-left(0, 1) -> get-vseg(get-vline(get-vll(cb), 0), 1)
	(18) get-left(1, 0) -> get-vseg(get-vline(get-vll(cb), 1), 0)
	(19) get-left(1, 1) -> get-vseg(get-vline(get-vll(cb), 1), 1)
	(20) get-left(2, 0) -> get-vseg(get-vline(get-vll(cb), 2), 0)
	(21) get-left(2, 1) -> get-vseg(get-vline(get-vll(cb), 2), 1)

	(22) get-right(0, 0) -> get-left(1, 0)
	(23) get-right(0, 1) -> get-left(1, 1)
	(24) get-right(1, 0) -> get-left(2, 0)
	(25) get-right(1, 1) -> get-left(2, 1)
	(26) get-right(2, 0) -> get-vseg(get-vline(get-vll(cb), 3), 0)
	(27) get-right(2, 1) -> get-vseg(get-vline(get-vll(cb), 3), 1)

-- valid example 2
createBoard(
	new-cl(
		number(3), empty,     number(3),
		empty,     number(3), empty
	),
	new-hll(
		new-hl(enabled,  unknown, enabled),
		new-hl(enabled,  unknown, enabled),
		new-hl(disabled, enabled, disabled),
	),
	new-vl(
		new-vl(unknown,  disabled),
		new-vl(disabled, unknown),
		new-vl(disabled, unknown),
		new-vl(enabled,  disabled),
	)
)
